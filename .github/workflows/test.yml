name: Test

on:
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:
  test-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.1
        with:
          vulkan-query-version: 1.4.309.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: "${{ github.workspace }}/vcpkg"
          runVcpkgInstall: true

      - name: Install dependencies
        run: vcpkg install --triplet x64-windows

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/build
          key: ${{ runner.os }}-cmake-${{ matrix.build_type }}-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt') }}
          restore-keys: ${{ runner.os }}-cmake-${{ matrix.build_type }}-

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build `
            -DCMAKE_BUILD_TYPE=${{matrix.build_type}} `
            -DCMAKE_TOOLCHAIN_FILE="${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake" `
            -DVCPKG_TARGET_TRIPLET=x64-windows `
            -DBUILD_TESTING=ON `
            -DGTEST_ROOT="${{github.workspace}}/vcpkg/installed/x64-windows"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} -j 4

      - name: Run Tests
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}} --output-on-failure --verbose

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-windows-${{matrix.build_type}}
          path: ${{github.workspace}}/build/Testing/**/*.xml
          if-no-files-found: warn

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan-dev libsdl2-dev libspdlog-dev libglm-dev libgtest-dev
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make
          sudo cp lib/*.a /usr/lib

      - name: Cache CMake build
        uses: actions/cache@v4
        with:
          path: ${{github.workspace}}/build
          key: ${{ runner.os }}-cmake-${{ matrix.build_type }}-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt') }}
          restore-keys: ${{ runner.os }}-cmake-${{ matrix.build_type }}-

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DBUILD_TESTING=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} -j $(nproc)

      - name: Run Tests
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{matrix.build_type}} --output-on-failure --verbose

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-linux-${{matrix.build_type}}
          path: ${{github.workspace}}/build/Testing/**/*.xml
          if-no-files-found: warn
